# Architecture Lab of Introduction to computer system
# Wang, Chen 16307110064
# Software Engineering, School of software
# October 3rd, 2018

# Excecution begins at address 0
		.pos 0
		irmovq stack, %rsp
		call main
		halt
		
                .align 8
# Source block
src:
		.quad 0x00a
		.quad 0x0b0
		.quad 0xc00

# Destination block
dest:
		.quad 0x111
		.quad 0x222
		.quad 0x333


main:
		irmovq src, %rdi                # First argument, src
		irmovq dest, %rsi               # Second argument, dest
		irmovq $3, %rdx                 # Third argument, 3
		call copy_block                 # copy_block(src, dest, 3)
		ret


#/* copy_block - Copy src to dest and return xor checksum of src */
# long copy_block(long* src, long* dest, long len)
# %rdi, %rsi, %rdx are used to store the arguments
# %rax is used to store the return value

copy_block:
		irmovq $1, %rcx                 # %rcx is used to store 1
		irmovq $8, %r8                  # %r8 is used to store 8
		irmovq $0, %rax                 # %rax is used to store result
		jmp test
loop:
		mrmovq 0(%rdi), %r9             # %r9 stores the value in memory
		addq %r8, %rdi                  # src++
		rmmovq %r9, (%rsi)              # Write the value into destination
		addq %r8, %rsi                  # dest++
		xorq %r9, %rax                  # Checksum
		subq %rcx, %rdx                 # len--
test:
		andq %rdx, %rdx                 # Set CC
		jg loop                         # Stop when 0
		ret                             # Return


		.pos 0x300
stack:
