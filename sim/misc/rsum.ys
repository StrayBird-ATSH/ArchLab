# Architecture Lab of Introduction to computer system
# Wang, Chen 16307110064
# Software Engineering, School of software
# October 3rd, 2018

# Excecution begins at address 0
		.pos 0
		irmovq stack, %rsp
		call main
		halt

# Sample linked list
		.align 8
ele1:
		.quad 0x00a
		.quad ele2
ele2:
		.quad 0x0b0
		.quad ele3
ele3:
		.quad 0xc00
		.quad 0

main:
		irmovq ele1, %rdi
		call rsum_list          # sum_list(ele1)
		ret


# /* rsum_list - Recursive version of sum_list */
# long sum_list(list_ptr ls)
# %rdi is used to store the 1st argument, i.e. ls
# %rax is used to store the return value
# %r14 is used to store the sum passed from recursive methods

rsum_list:
		pushq %r14              # %r14 is a callee-saved register, save its value before we use it
		irmovq $0, %rax         # val = 0
		andq %rdi,%rdi          # Set CC
		je return               # Stop when 0
		mrmovq 0(%rdi), %r14    # Store the node value in %r14
		mrmovq 8(%rdi), %rdi    # The pointer to next node is in %rdi
		call rsum_list          # Recursive call
		addq %r14, %rax         # Add to val
return:
		popq %r14               # Get val from memory
		ret                     # Return

		.pos 0x400
stack:
