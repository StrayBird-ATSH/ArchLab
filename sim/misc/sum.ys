# Architecture Lab of Introduction to computer system
# Wang, Chen 16307110064
# Software Engineering, School of software
# October 3rd, 2018

# Excecution begins at address 0
		.pos 0
		irmovq stack, %rsp
		call main
		halt

# Sample linked list
		.align 8
ele1:
		.quad 0x00a
		.quad ele2
ele2:
		.quad 0x0b0
		.quad ele3
ele3:
		.quad 0xc00
		.quad 0

main:
		irmovq ele1, %rdi
		call sum_list           # sum_list(ele1)
		ret

# /* sum_list - Sum the elements of a linked list */
# long sum_list(list_ptr ls)
# %rdi is used to store the 1st argument, i.e. ls
# %rax is used to store the return value

sum_list:
		irmovq $0, %rax         # val = 0
		jmp test                # Goto test
loop:
		mrmovq 0(%rdi), %r10    # Get val
		addq %r10, %rax         # Add to val
		mrmovq 8(%rdi), %rdi    # Write the address of next node to %rdi
		
test:
		andq %rdi, %rdi         # Set CC
		jne loop                # Stop when 0
		ret                     # Return

# Stack starts here and grows to lower addresses
		.pos 0x400
stack:
